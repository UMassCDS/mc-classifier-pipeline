# A build system is required to convert your code into a distributable package.
# setuptools is the oldest and most common build tool, but we also like Poetry
[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "mc_classifier_pipeline"
version = "0.0.1"
description = "Pipelines for preparing documents from Media Cloud's news archive for annotation and machine learning."
readme = "README.md"
authors = [
    {name = "UMass Amherst Center for Data Science"},
]
license = {text = "MIT"}
keywords = ["media", "classification", "machine-learning", "nlp"]

# What version of python does your library work with?
requires-python = ">=3.10"

# Metadata about your package in case you upload it to PYPI
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

# All the dependencies needed for running your module go here
dependencies = [

    "accelerate>=1.9.0",
    "joblib>=1.3.2",
    "label-studio-sdk>=1.0.20",
    "mediacloud>=4.4.1",
    "numpy>=2.0.0",
    "optuna",
    "pandas>=2.0.0",
    "python-dotenv>=1.1.0",
    "scikit-learn>=1.7.0",
    "torch>=2.7.0",
    "torchvision>=0.22.0",
    "tqdm>=4.67.0",
    "transformers>=4.55.0",
    "xmltodict>=0.13.0",
]

[project.optional-dependencies]
# Extra dependencies only needed for running tests go here
test = ["pytest>=8.0.0"]

# Dependencies that are useful only to developers, like an autoformatter and
# support for visualizations in jupyter notebooks go here
dev = [
    "bs4>=4.0.0",
    "dotenv>=1.0.0",
    "jupyter>=1.0.0",
    "lxml_html_clean>=1.0.0",
    "matplotlib>=3.0.0",
    "mediacloud>=4.4.1",
    "newspaper3k>=0.2.0",
    "nltk>=3.0.0",
    "requests>=2.0.0",
    "ruff>=0.0.0",
    "seaborn>=0.11.0",
    "sphinx>=4.0.0",
    "textblob>=0.15.0"
]

# If your project contains scripts you'd like to be available command line, you can define them here.
# The value must be of the form "<package_name>:<module_name>.<function>"
[project.scripts]
retrieve-mc-docs = "mc_classifier_pipeline.doc_retriever:main"
mc-pipeline = "mc_classifier_pipeline.run_pipeline:main"

# Add customizations to the Ruff linter as described on https://docs.astral.sh/ruff/configuration/
[tool.ruff]
# Override ruff's default so that lines aren't more than 120 characters
line-length = 119
